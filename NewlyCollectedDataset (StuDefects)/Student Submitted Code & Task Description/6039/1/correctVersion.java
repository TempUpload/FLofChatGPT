import java.util.LinkedList;import java.util.Queue;import java.util.Scanner;import java.util.Stack;public class Main {	public static void main(String[] arge)	{		Scanner in=new Scanner(System.in);		int n=in.nextInt(),m=in.nextInt();		int[][] map=new int[n][m];		int[][] visit=new int[n][m];		for(int i=0;i<n;i++)		{			String s=in.next();			for(int j=0;j<m;j++)				{				map[i][j]=s.charAt(j)-'0';				visit[i][j]=0;				}		}		int x=0,y=0;		visit[0][0]=1;		Queue<int[]> qu=new LinkedList<int[]>();		int[] e= new int[2];		e[0]=0;		e[1]=0;		qu.offer(e);		Queue<String> tour=new LinkedList<String>();		tour.offer("");		while(!qu.isEmpty())		{			int[] pos=qu.poll();			String s=tour.poll();			x=pos[0];			y=pos[1];			if(x==n-1&&y==m-1)			{				System.out.println(s);				break;			}			if(x<n-1&&map[x+1][y]==0&&visit[x+1][y]==0)			{				visit[x+1][y]=1;				int[] p=new int[2];				p[0]=x+1;				p[1]=y;				qu.offer(p);				tour.offer(s+"D");			}			if(y>0&&map[x][y-1]==0&&visit[x][y-1]==0)			{				int[] p=new int[2];				visit[x][y-1]=1;				p[0]=x;				p[1]=y-1;				qu.offer(p);				tour.offer(s+"L");			}			if(y<m-1&&map[x][y+1]==0&&visit[x][y+1]==0)			{					int[] p=new int[2];				visit[x][y+1]=1;				p[0]=x;				p[1]=y+1;				qu.offer(p);				tour.offer(s+"R");			}			if(x>0&&map[x-1][y]==0&&visit[x-1][y]==0)			{				int[] p=new int[2];				visit[x-1][y]=1;				p[0]=x-1;				p[1]=y;				qu.offer(p);				tour.offer(s+"U");			}					}	}	}